temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
times[1:5]
temps[1:5]
summary(fit)
integrand <- function(x) {282 -812.33*x + 976.33*x^2 - 470.67*x^3 + 78.67*x^4}
integrand
coef(fit)[1]
integrand <- function(x) {coef(fit[1]) + coef(fit)[2]*x + coef(fit)[3]*x^2 + coef(fit)[4]*x^3 + coef(fit)[5]*x^4}
integrand
integrate(integrand, from = 1, to = 2)
integrate(integrand, lower = 1, upper = 2)
p
integrand <- function(x) {p}
integrate(integrand, lower = 1, upper = 2)
class(p)
names(p)
coef(fit)[1]
coef(fit)[2]
names(coef(fit)[2])
value(coef(fit)[2])
coef(fit)[[1]]
integrand <- function(x) {coef(fit[[1]]) + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
integrand
integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
integrand
integrate(integrand, lower = 1, upper = 2)
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method = "simple")
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
# degree day accrual for the month
#print(dd)
if (method = "curve")
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
p = polynomial(coef(fit))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- auc$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
rm(GDD)
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (simple)
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
# degree day accrual for the month
#print(dd)
if (curve)
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
p = polynomial(coef(fit))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- auc$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50)
Acc_Degday(86, 50, method = "simple")
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if ("simple")
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
# degree day accrual for the month
#print(dd)
if ("curve")
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
p = polynomial(coef(fit))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- auc$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if ("simple") {
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if ("curve") {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method = "simple") {
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method = "curve") {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method == "simple") {
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method == "curve") {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method == "simple")
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
# degree day accrual for the month
#print(dd)
if (method == "curve")
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
class(plot)
names(plot)
args(plot)
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method == simple){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method == curve) {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday <- function(TH, TL, method = c(simple, curve)){
dd <- c()
if (method == simple){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method == curve) {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = simple)
Acc_Degday <- function(TH, TL){
dd <- c()
#if (method == simple){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
#}
# degree day accrual for the month
#print(dd)
#if (method == curve) {
#require(polynom)
#make vector of high and low data combined
#temps <-c(rbind(deg_data[,2],deg_data[,1]))
#times <- seq(0, length(temps), by = 0.5)
#create loop
#for(i in 1:(length(temps)-1)){
#       time.a = times[i+1:i+5]
#      temp.a = temps[i+1:i+5]
#     fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
#    c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
#   DDtemp <- c$value - TL
#  DDay <- if(DDtemp < 0) {0} else {DDtemp}
# dd <- append(dd, DDay)
#}
#}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50)
nrow(deg_data)
View(c)
rm(c)
Acc_Degday <- function(TH, TL){
dd <- c()
#if (method == simple){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
#}
# degree day accrual for the month
#print(dd)
#if (method == curve) {
#require(polynom)
#make vector of high and low data combined
#temps <-c(rbind(deg_data[,2],deg_data[,1]))
#times <- seq(0, length(temps), by = 0.5)
#create loop
#for(i in 1:(length(temps)-1)){
#       time.a = times[i+1:i+5]
#      temp.a = temps[i+1:i+5]
#     fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
#    c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
#   DDtemp <- c$value - TL
#  DDay <- if(DDtemp < 0) {0} else {DDtemp}
# dd <- append(dd, DDay)
#}
#}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50)
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method == "simple"){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method == "curve") {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
c <- integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
DDtemp <- c$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday(86, 50, method = "curve")
rm(temps)
rm(list = c(temp, fit, dd, p, time.a))
rm(temp)
rm(time.a)
rm(temp.a)
rm(fit)
rm(integrand)
rm(dd)
rm(times)
Acc_Degday(86, 50, method = "simple")
Acc_Degday(86, 50, method = "curve")
Acc_Degday <- function(TH, TL, method = c("simple", "curve")){
dd <- c()
if (method == "simple"){
for(i in 1:nrow(deg_data)) {
# highs or lows used for calculation cannot be outside the temperature thresholds
High <- if(deg_data[i, 1] > TH) {TH} else {deg_data[i, 1]} #define high temp
Low <- if(deg_data[i, 2] < TL) {TL} else {deg_data[i, 2]} # define low temp
DDtemp <- (High + Low)/2 - TL ##DD calculation
# degree days cannot be negative
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
# degree day accrual for the month
#print(dd)
if (method == "curve") {
require(polynom)
#make vector of high and low data combined
temps <-c(rbind(deg_data[,2],deg_data[,1]))
times <- seq(0, length(temps), by = 0.5)
#create loop
for(i in 1:(length(temps)-1)){
time.a = times[i+1:i+5]
temp.a = temps[i+1:i+5]
fit <- lm(temp.a ~ time.a + I(time.a^2) + I(time.a^3) + I(time.a^4))
integrand <- function(x) {coef(fit)[[1]] + coef(fit)[[2]]*x + coef(fit)[[3]]*x^2 + coef(fit)[[4]]*x^3 + coef(fit)[[5]]*x^4}
cu <- integrate(integrand, lower = time.a[2], upper = time.a[4])
DDtemp <- cu$value - TL
DDay <- if(DDtemp < 0) {0} else {DDtemp}
dd <- append(dd, DDay)
}
}
GDD <<- sum(dd)
#print(GDD)
print(paste("Total accumulation of GDD is", sum(dd)))
}
Acc_Degday(86, 50, method = "simple")
Acc_Degday(86, 50, method = "curve")
Acc_Degday(86, 50, method = "curve")
integrate()
