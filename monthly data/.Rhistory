download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
source("http://www.openintro.org/stat/data/present.R")
present
dim(present)
str(present)
names(present)
View(present)
present$boys
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$girls, type = "l")
?plot
present$boys + present$girls
plot(year, boys + girls, data=present, type = "l")
plot(present$year, present$boys + present$girls, type = "l")
sum <- present$boys + present$girls
max(sum)
which.max(sum)
present$year
present$boys / present$girls
present$boys / (present$boys + present$girls)
present$girls / (present$boys + present$girls)
plot(present$year, present$boys / (present$boys + present$girls), type = "l")
present$boys > present$girls
g <- present$girls / (present$boys + present$girls)
b <- present$boys / (present$boys + present$girls)
b/g
plot(present$year, b/g, type = "l")
abs(present$boys - present$girls)
val <- abs(present$boys - present$girls)
which.max(val)
present$year
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
str(cdc)
head(cdc)
tail(cdc)
summary(cdc$weight)
mean(cdc$weight)
var(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
barplot(table(cdc$smoke100))
summary(cdc$gender)
summary(cdc$genhlth)
4657/20000
gender_smokers = table(cdc$gender,cdc$smoke100)
gender_smokers
mosaicplot(gender_smokers)
dim(cdc)
cdc[567,6]
cdc[567,]
cdc[1:10,6]
names(cdc)
cdc[1:10,]
mdata = subset(cdc, cdc$gender == "m")
m_and_over30 = subset(cdc, cdc$gender == "m" & cdc$age > 30)
m_or_over30 = subset(cdc, cdc$gender == "m" | cdc$age > 30)
under23_and_smoke <- subset(cdc, cdc$age <23 & cdc$smoke100 == "1")
under23_and_smoke
dim(under23_and_smoke)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
(147/(65^2))*703
(140/(65^2))*703
bmi = (cdc$weight / cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
names(cdc)
boxplot(bmi ~ cdc$exerany)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks = 50)
hist(bmi)
hist(bmi, breaks = 50)
plot(cdc$weight, cdc$wtdesire)
Place <- c(N, S, E, W)
Place <- c(n, s, e, w)
Place <- c(s, e, w)
Place <- c("N", "S", "E", "W")
sample(Place)
place <- c("n", "s", "e", "w")
choose(place)
?choose
choose(1, place)
sample(place, size=1, replace = TRUE)
sample(place, size=1, replace = TRUE)
sample(place, size=1, replace = TRUE)
sample(place, size=1, replace = TRUE)
sample(place, size=10, replace = TRUE)
sample(place, size=10, replace = FALSE)
sample(place, size=10, replace = TRUE)
ten = sample(place, size=10, replace = TRUE)
?count
?count.fields
if(ten == "N")
)
summary(ten)
count.fields(ten, "N")
table(ten)
ten
library("swirl")
rm(list=ls()))
rm(list=ls())
swirl()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <-cnames
my_data
TRUE == TRUE
(F == T) == F
(FALSE==TRUE)==FALSE
6 == 7
6 < 7
10 <= 10
5!=7
5 != 7
5 !== 7
5 != 7
info()
5 == !7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
bye()
setwd("C:/Users/echasen/Desktop/SPLAT-Annie's work/2014 data") # you need to change this to the directory you store you files for this project
getwd
getwd()
setwd("C:/Users/echasen/Google Drive)
)
)
?
""
...
stop
library(nlme)
data("Rail")
plot(Rail)
trellis.par.set(theme = col.whitebg())
?trellis.par.set
library(lattice)
trellis.par.set(theme = col.whitebg())
plot(Rail)
lme(travel~1, data = Rail, random = ~1 | Rail)
anova(lme(travel~1, data = Rail, random = ~1 | Rail))
rl <- lme(travel~1, data = Rail, random = ~1 | Rail)
plot(rl)
plot(rl, resid(.)~fitted(.)|Rail)
lme(travel~1, data = Rail, random = ~1 | Rail, method = "ML")
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline( h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col  = cm.colors(25))
heatmap(mt)
mt
plot(denmt
)
distmt
setwd("C:/Users/echasen/Google Drive/coursera/degree day data science")
DD_data <- function(location,  month, year) {
#download data from wunderground, create one data frame containing all months with year to date
mo <- list()
for(i in 3:month) {
url <- paste0("http://www.wunderground.com/history/airport/",location, "/", year, "/", i, "/1/MonthlyHistory.html?format=1")
download.file(url = url, destfile = paste0("./monthly data/mo", i, ".csv"))
mon <- read.csv(paste0("./monthly data/mo", i, ".csv"), header = TRUE)[ ,c("Max.TemperatureF", "Min.TemperatureF")]
mon$i <- i
mo[[i]] <- mon
}
deg_data <<- do.call(rbind, mo) #data frame with highs and lows for each month
}
DD_data("KRNH", 3, 2016)
View(deg_data)
setwd("..")
getwd()
setwd("C:/Users/echasen/Google Drive/coursera/degree day data science")
setwd("monthly data/")
DD_data_ID <- function(location,  month, year) {
#download data from wunderground, create one data frame containing all months with year to date
mo <- list()
for(i in 3:month) {
url <- paste0("http://www.wunderground.com/history/airport/",location, "/", year, "/", i, "/1/MonthlyHistory.html?format=1")
download.file(url = url, destfile = paste0("./monthly data/mo", i, ".csv"))
mon <- read.csv(paste0("./monthly data/mo", i, ".csv"), header = TRUE)[ ,c("Max.TemperatureF", "Min.TemperatureF")]
mon$i <- i
mo[[i]] <- mon
}
deg_data <- do.call(rbind, mo) #data frame with highs and lows for each month
write.table(deg_data, file = "location.txt")
}
DD_data_ID("KRNH", 3, 2016)
DD_data_ID <- function(location,  month, year) {
#download data from wunderground, create one data frame containing all months with year to date
mo <- list()
for(i in 3:month) {
url <- paste0("http://www.wunderground.com/history/airport/",location, "/", year, "/", i, "/1/MonthlyHistory.html?format=1")
download.file(url = url, destfile = paste0("./mo", i, ".csv"))
mon <- read.csv(paste0("./mo", i, ".csv"), header = TRUE)[ ,c("Max.TemperatureF", "Min.TemperatureF")]
mon$i <- i
mo[[i]] <- mon
}
deg_data <- do.call(rbind, mo) #data frame with highs and lows for each month
write.table(deg_data, file = "location.txt")
}
DD_data_ID("KRNH", 3, 2016)
DD_data_ID <- function(location,  month, year) {
#download data from wunderground, create one data frame containing all months with year to date
mo <- list()
for(i in 3:month) {
url <- paste0("http://www.wunderground.com/history/airport/",location, "/", year, "/", i, "/1/MonthlyHistory.html?format=1")
download.file(url = url, destfile = paste0("./mo", i, ".csv"))
mon <- read.csv(paste0("./mo", i, ".csv"), header = TRUE)[ ,c("Max.TemperatureF", "Min.TemperatureF")]
mon$i <- i
mo[[i]] <- mon
}
deg_data <- do.call(rbind, mo) #data frame with highs and lows for each month
write.table(deg_data, file = location".txt")
}
DD_data_ID <- function(location,  month, year) {
#download data from wunderground, create one data frame containing all months with year to date
mo <- list()
for(i in 3:month) {
url <- paste0("http://www.wunderground.com/history/airport/",location, "/", year, "/", i, "/1/MonthlyHistory.html?format=1")
download.file(url = url, destfile = paste0("./mo", i, ".csv"))
mon <- read.csv(paste0("./mo", i, ".csv"), header = TRUE)[ ,c("Max.TemperatureF", "Min.TemperatureF")]
mon$i <- i
mo[[i]] <- mon
}
deg_data <- do.call(rbind, mo) #data frame with highs and lows for each month
write.table(deg_data, file = "loc", location, ".txt")
}
a
DD_data_ID("KRNH", 3, 2016)
a <- 3
as.Date(a)
